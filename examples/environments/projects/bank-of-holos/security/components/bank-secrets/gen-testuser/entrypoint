#! /bin/bash
#
# Generate a secret containing a random password instead of the hard-coded
# password used at 
# https://github.com/GoogleCloudPlatform/bank-of-anthos/blob/v0.6.5/src/accounts/accounts-db/initdb/1-load-testdata.sh#L102

tmpdir="$(mktemp -d)"
finish() {
  status=$?
  rm -rf "${tmpdir}"
  return $status
}
trap finish EXIT

set -euo pipefail

cd "$tmpdir"
mkdir secret
cd secret

export LC_ALL=C

# Secure replacement for https://github.com/GoogleCloudPlatform/bank-of-anthos/blob/v0.6.5/kubernetes-manifests/config.yaml#L39-L42
echo -n 'True' > USE_DEMO_DATA
echo -n testuser > DEMO_LOGIN_USERNAME

echo "generating DEMO_LOGIN_PASSWORD" >&2
export DEMO_LOGIN_PASSWORD="$(tr -dc A-Za-z0-9 </dev/urandom | head -c 20)"
echo -n "$DEMO_LOGIN_PASSWORD" > DEMO_LOGIN_PASSWORD

echo "bcrypt hashing DEMO_LOGIN_PASSWORD" >&2
python3 -c "import bcrypt; import os; print(bcrypt.hashpw(os.getenv('DEMO_LOGIN_PASSWORD').encode('utf-8'), bcrypt.gensalt()).decode())" > DEFAULT_PASSHASH

cd ..

echo "copying secret into kubernetes manifest secret.yaml" >&2
kubectl create secret generic demo-data-config --from-file=secret --dry-run=client -o yaml > secret.yaml

echo "applying secret.yaml" >&2
kubectl apply --server-side=true -f secret.yaml

echo "cleaning up" >&2
rm -rf secret secret.yaml

echo "ok done" >&2
